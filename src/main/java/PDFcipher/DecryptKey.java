/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package PDFcipher;

import java.io.FileOutputStream;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;

import java.security.KeyPair;
import java.security.NoSuchAlgorithmException;
import java.security.InvalidKeyException;

import javax.crypto.Cipher;
import javax.crypto.CipherInputStream;
import javax.crypto.NoSuchPaddingException;
import javax.crypto.BadPaddingException;
import javax.crypto.IllegalBlockSizeException;

public class DecryptKey {

    public static void startDecrypt(String inputDirectory, String outputDecipherDirectory, PDFKey pair) {
      //Initializing a Cipher Text
      CipherInputStream decipherText = null;
      FileOutputStream fost = null;
      FileInputStream data = null;
      //get data from input File
      try{ data = new FileInputStream(inputDirectory); }
      catch(FileNotFoundException ex) { System.out.println(ex.getMessage()); }
      //makecipherinputstream
      try{ decipherText = decryptCall(data, pair.getRSA()); }
      catch(IOException ex) { System.out.println(ex.getMessage()); }
      //get data from input File
      try{ fost = new FileOutputStream(outputDecipherDirectory); }
      catch(FileNotFoundException ex) { System.out.println(ex.getMessage()); }
      //print to file
      try{ writeDecrypt(fost, decipherText); }
      catch(IOException ex) { System.out.println(ex.getMessage()); }

      try{
        data.close();
        fost.close();
      }
      catch(IOException ex) {
        System.out.println(ex.getMessage());
      }
      System.out.println("done");
    }

    private static CipherInputStream decryptCall(FileInputStream data, KeyPair pair) throws IOException{
      Cipher cipher = null;
      try{//Creating a Cipher object
        cipher = Cipher.getInstance("RSA/ECB/PKCS1Padding");
      }
      catch(NoSuchPaddingException | NoSuchAlgorithmException ex) {
        System.out.println(ex.getMessage());
      }
      //Initializing a Cipher object
      try{ cipher.init(Cipher.DECRYPT_MODE, pair.getPrivate()); }
      catch(InvalidKeyException ex) { System.out.println(ex.getMessage()); }
      return (new CipherInputStream(data, cipher));
    }

    private static void writeDecrypt(FileOutputStream data, CipherInputStream cipherText) throws IOException{
      int i;
      byte[] block = new byte[256];
      while ((i = cipherText.read(block)) != -1) {
        data.write(block, 0, i);
      }

      try{
        data.close();
        cipherText.close();
      }
      catch(IOException ex) {
        System.out.println(ex.getMessage());
      }
    }
}
